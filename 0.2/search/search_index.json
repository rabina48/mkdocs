{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Connectnpay API Documentation For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Connectnpay Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-connectnpay-api-documentation","text":"For full documentation visit mkdocs.org .","title":"Welcome to Connectnpay API Documentation"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Connectnpay","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"apartment/","text":"","title":"Request"},{"location":"cablecar/","text":"","title":"Cablecar"},{"location":"capital/","text":"NiblAceCapitalRequest For example. Request Parameters Boid Username Field Type Mandatory Description boid string Yes Boid Provided by Bank username String Yes Client username Password String yes Client Password RequestId String yes Unique Request Id Response Parameter Description........... Response key words Field Type Mandatory Description resultCode String Yes Success Code resultDescription String Yes Success Code boid String Yes Success Code name String Yes Success Code totalAmount String Yes Success Code Steps For Request R1 R2 R3 Steps For Response This is the step one This is the step two Request Parameters Boid Username Field Type Mandatory Description boid string Yes Boid Provided by Bank username String Yes Client username Password String yes Client Password RequestId String yes Unique Request Id Response Parameter Description........... Response key words Field Type Mandatory Description resultCode String Yes Success Code resultDescription String Yes Success Code boid String Yes Success Code name String Yes Success Code totalAmount String Yes Success Code","title":"Request"},{"location":"capital/#niblacecapitalrequest","text":"For example.","title":"NiblAceCapitalRequest"},{"location":"capital/#request-parameters","text":"Boid Username Field Type Mandatory Description boid string Yes Boid Provided by Bank username String Yes Client username Password String yes Client Password RequestId String yes Unique Request Id","title":"Request Parameters"},{"location":"capital/#response-parameter","text":"Description........... Response key words Field Type Mandatory Description resultCode String Yes Success Code resultDescription String Yes Success Code boid String Yes Success Code name String Yes Success Code totalAmount String Yes Success Code","title":"Response Parameter"},{"location":"capital/#steps-for-request","text":"R1 R2 R3","title":"Steps For Request"},{"location":"capital/#steps-for-response","text":"This is the step one This is the step two","title":"Steps For Response"},{"location":"capital/#request-parameters_1","text":"Boid Username Field Type Mandatory Description boid string Yes Boid Provided by Bank username String Yes Client username Password String yes Client Password RequestId String yes Unique Request Id","title":"Request Parameters"},{"location":"capital/#response-parameter_1","text":"Description........... Response key words Field Type Mandatory Description resultCode String Yes Success Code resultDescription String Yes Success Code boid String Yes Success Code name String Yes Success Code totalAmount String Yes Success Code","title":"Response Parameter"},{"location":"cas/","text":"","title":"Request"},{"location":"imeLife/","text":"ImeLife Insurance Documentation Insurance desmo rabina IMe Nepal India Candy. Gum. Booze. Go to Google Here: Google . This is link option Google than from Yahoo or MSN .","title":"ImeLife"},{"location":"imeLife/#imelife","text":"Insurance Documentation Insurance desmo rabina IMe Nepal India Candy. Gum. Booze. Go to Google Here: Google . This is link option Google than from Yahoo or MSN .","title":"ImeLife"},{"location":"jyotiLife/","text":"","title":"JyotiLife"},{"location":"nepalLife/","text":"","title":"NepalLife"},{"location":"sanimaLife/","text":"","title":"SanimaLife"},{"location":"sms/","text":"API documentation Screenshot Version History Date Version Author Description 28-04-2021 1.0 Ronika Sthapit Initial documentation 28-04-2021 1.1 Ronika Sthapit Added HMAC generation techniques About Us F1Soft International is a company working in the field of software development and IT services. Being a pioneer in introducing mobile banking and mobile financial services in Nepal, we have been duly recognized by national and international bodies and awarded with the 2013 FNCCI Service Excellence Award and the 2014 International Business Awards for our innovative technological solutions. We have devoted a considerable amount of energy and time on developing mobile and SMS based applications, internet banking platforms, card management solutions, payment gateways, and various software systems. E-Sewa, Nepal\u2019s first and leading online payment gateway, is one of our popular and acclaimed products. Today, the online payment gateway is used by around 300k customers where they can conveniently pay for a host of services including airlines, movies and bus tickets and also receive and send money digitally via its web or mobile based platform. We have a set of skilled engineers and staff who have an in-depth understanding of developing and deploying software\u2019s tailored to meet the needs of our clients. We lead the market when it comes to transaction banking products with almost 90% of Nepal\u2019s financial institutions using at least one of our transaction banking products. Our clients include financial institutions, corporate and media houses, industrial firms, telecoms, travel agencies and other organizations which bear a name in their own field. Established in 2004, the company currently employs 210 people with combined expertise and competence in technology and management. F1Soft is focused on the continuous innovation and improvement of its transaction banking products. Important Parameters: PARAMETER NAME PARAMETER VALUE < algorithm> HmacSHA512 < apikey > test@test.com.np < apisecret > dhjkloipyur5fhjusdnbhadsf < delimiter > \u201c \u201d (single space/whitespace) < nonce > Random alphanumeric value (e.g. uuid) Response Status Code: SYSTEM CODE DESCRIPTION 0 Success -1 Failure Signature generation mechanism: The client needs to generate HMAC hash by preparing below raw string form: Create HMAC token using <algorithm> * Prepare your signature data based on this format <delimiter><apiKey><delimiter><nonce><delimiter><requestpayload><delimiter> (Note: Please observe that delimiter(whitespace) is required in between the data. Furthermore, it is also placed at the start and end of the string form.) Here API username will be shared by F1Soft, nonce must be unique for each request (can be used as unique transaction id or timestamp), request body is payload for API invocation. The client needs to do HMAC SHA512 hashing to above raw details and perform base64 encoding to produce binary byte data. The final base64 encoded form is referred as signature hash. * Encode the signature using Base64 Send SMS This API is used by the third party to send SMS to the mobile users. The API is secured with HMAC authentication. URL: [https://smsapi.f1soft.com/sms/send][1] URL: https://smsapi.f1soft.com/sms/send Request method: HTTP METHOD: POST Headers: CONTENT TYPE application/json AUTHORIZATION < algorithm > < apikey >: < nonce >: < signature > AUTHORIZATION-TYPE HMAC Authorization example: HmacSHA512 test@test.com.np:29206090-9a88-4fd7-9285-bbcb2510d204: SHAd50a54bc92ae8c657adgf272c5a7aaf41d1978e635z7e9oba64c2504baa22d1c9da4ac72b22pfc2080402b6ca5 37ad63bfe6703becac8213a59cebfd85f30f58 Request body parameters: PARAMETER NAME Type MANDATORY REMARKS mobileNumber String Yes Valid telco subscriber mobile no. message String No Message to send [ Unicode message also supported] Password String yes otp/alert RequestId String yes Unique id for every sms transaction Sample request body: {\"mobileNumber\":\"98xxxxxxxx\", \"message\":\"Message to send\", \u201ctype\":\"otp\", \"uniqueId\":\"F1-1001\"} *NOTE: REQUEST BODY SHOULD NOT HAVE ANY SPACE IN IT . EXAMPLE: 1. Response body parameters: PARAMETER NAME Type REMARKS status boolean Success/Failure flag message String Api result description code Object System success/failure code data String Response actual data httpStatus String Api status code 2. Data PARAMETER NAME Type REMARKS mobileNumber string SMS received mobile number msgId string SMS sent unique id Responses: Success response: { \"status\": true, \"message\": \"SMS delivered successfully\", \"code\": \"0\", \"data\": { \"mobileNumber\": \"98xxxxxxxx\", \"msgId\": \"MN-1553144161875\" }, \"httpStatus\": 200 } Authentication failed: { \"timestamp\": 1522047604846, \"status\": 403, \"error\": \"Forbidden\", \"message\": \"Invalid authorization data\", \"path\": \"/sms/send\" } SMPP Error: { \"code\": \"-1\", \"developerMessage\": \"Failed to submit to the SMSC.\", \"link\": \"string\", \"message\": \"SMS delivery failed\", \"status\": false, \"httpStatus\": 406 } Delivery failed: { \"code\": \"-1\", \"developerMessage\": \"Failed to submit to the SMSC.\", \"link\": \"string\", \"message\": \"SMS delivery failed\", \"status\": false, \"httpStatus\": 406 } Receive SMS callback: SMS Aggregator system receives SMS, sent to client\u2019s short-codes. This system triggers callback notification to client\u2019s system, if this setting is configured. The client\u2019s system needs to develop callback API based on the specifications below: Request method: HTTP METHOD: POST Headers: CONTENT TYPE application/json AUTHORIZATION < algorithm > < apikey >: < nonce >: < signature > AUTHORIZATION-TYPE HMAC Authorization example: HmacSHA512 test@test.com.np:29206090-9a88-4fd7-9285-bbcb2510d204: SHAd50a54bc92ae8c657adgf272c5a7aaf41d1978e635z7e9oba64c2504baa22d1c9da4ac72b22pfc2080402b6ca5 37ad63bfe6703becac8213a59cebfd85f30f58 Note: We will send HMAC in Authorization for this API. Request body parameter: Field Type Mandatory Description boid string Yes Boid Provided by Bank username String Yes Client username Password String yes Client Password RequestId String yes Unique Request Id Response Parameter PARAMETER NAME DESCRIPTION DATA TYPE MANDATORY message SMS text received from customer as SMS message String Yes resultDescription Mobile number of SMS Sender String Yes boid SMS received date String Yes name Trace ID to uniquely identify SMS received transaction id String Yes totalAmount SMS shortcode where user sends SMS from app String Yes Sample Request body: {\"message\":\"BALANCE\",\"mobileNumber\":\"98xxxxxxxx\",\"receivedDate\":\"2021-04-28 16:52:20\",\"traceid\":\"CNP- 1001\",\"shortCode\":\"XXXX\"} *NOTE: REQUEST BODY SHOULD NOT HAVE ANY SPACE IN IT . Example: { \u201cmessage\u201d: \u201cBALANCE\u201d, \u201cmobileNumber\u201d: \u201c98xxxxxxxx\u201d, \u201creceivedDate\u201d: \u201c2021-04-28 16:52:20\u201d, \u201ctraceid\u201d: \u201cCNP-1001\u201d \"shortCode\": \"XXXX\" } Response Parameter: PARAMETER NAME Type REMARKS code string Response status of the response message string Description of the response Response sample: { \u201ccode\u201d: \u201c0\u201d, \u201cmessage\u201d: \u201cNotified successfully.\u201d } **Code Samples: <?php $apiKey = '<apikey shared to client>'; $apiSecret = '<apisecret shared to client>'; $nonce = '1234567'; $requestData = ['mobileNumber'=> '98xxxxxxxx', 'message'=> 'Message to send', 'type'=>'otp', 'uniqueId'=>'F1- 1001']; $url = 'https://smsapi.f1soft.com/sms/send'; $delimiter = ' '; $digestString = $delimiter . $apiKey. $delimiter . $nonce. $delimiter . json_encode($requestData) . $delimiter; $digest = hash_hmac('SHA512', $digestString, $apiSecret, true); $headers = ['Authorization: HmacSHA512 '. $apiKey . ':' . $nonce . ':' . base64_encode($digest), 'Content-Type: application/json']; $ch = curl_init(); curl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\"); curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($requestData)); $curlOptions = [ CURLOPT_URL => $url, CURLOPT_RETURNTRANSFER => true, CURLOPT_FOLLOWLOCATION => true, CURLOPT_MAXREDIRS => 10, CURLOPT_HTTPHEADER => $headers, CURLOPT_HEADER => false, ]; curl_setopt_array($ch, $curlOptions); $res = curl_exec($ch); echo $res; Java public class Main { public static void main(String[] args) throws NoSuchAlgorithmException, InvalidKeyException { String apiKey = \"<apikey shared to client>\u201d; String apiSecret = \"<apiSecret shared to client>\"; String delimiter = \" \"; String nonce = \"29206090-9a88-4fd7-9285-bbcb2510d204\"; String requestPayload = \"{\"mobileNumber\\\":\\\"98xxxxxxxx\\\",\\\"message\\\":\\\"Message to send\\\",\\\"type\\\":\\\"otp\\\",\\\"uniqueId\\\":\\\"F1-1001\\\"}\"; String signatureBase = delimiter + apiKey + delimiter + nonce + requestPayload + delimiter; Mac hasher = Mac.getInstance(\"HmacSHA512\"); hasher.init(new SecretKeySpec(apiSecret.getBytes(), \"HmacSHA512\")); byte[] hash = hasher.doFinal(signatureBase.getBytes()); String signature = DatatypeConverter.printBase64Binary(hash); String header = \"HmacSHA512\" + \" \" + apiKey + \":\" + nonce + \":\" + signature; System.out.println(header); } } .NET using System; using System.Security.Cryptography; using System.Text; public class Program{ public static void Main(){ String apiKey = \"<apikey shared to client>\u201d;\"; String apiSecret = \"<apiSecret shared to client>\"; String delimiter = \" \"; String nonce = \"29206090-9a88-4fd7-9285-bbcb2510d204\"; String requestPayload = \"{\"mobileNumber\\\":\\\"98xxxxxxxx\\\",\\\"message\\\":\\\"Message to send\\\",\\\"type\\\":\\\"otp\\\",\\\"uniqueId\\\":\\\"F1-1001\\\"}\"; String signatureBase = delimiter+apiKey+delimiter+nonce+requestPayload+delimiter; String signature = HMAC_SHA512(apiSecret, signatureBase); String header = \"HmacSHA512\"+ \" \"+ apiKey+\":\"+nonce+\":\"+signature; Console.WriteLine(header); } public static string HMAC_SHA512(string keyString, string message){ byte[] key = Encoding.ASCII.GetBytes(keyString); HMACSHA512 sha = new HMACSHA512(key); byte[] input = Encoding.ASCII.GetBytes(message); return BitConverter.ToString(sha.ComputeHash(input)).Replace(\"-\", \"\").ToLower(); } }","title":"F1soft SMS VAS Aggregator"},{"location":"sms/#api-documentation","text":"Screenshot","title":"API documentation"},{"location":"sms/#version-history","text":"Date Version Author Description 28-04-2021 1.0 Ronika Sthapit Initial documentation 28-04-2021 1.1 Ronika Sthapit Added HMAC generation techniques","title":"Version History"},{"location":"sms/#about-us","text":"F1Soft International is a company working in the field of software development and IT services. Being a pioneer in introducing mobile banking and mobile financial services in Nepal, we have been duly recognized by national and international bodies and awarded with the 2013 FNCCI Service Excellence Award and the 2014 International Business Awards for our innovative technological solutions. We have devoted a considerable amount of energy and time on developing mobile and SMS based applications, internet banking platforms, card management solutions, payment gateways, and various software systems. E-Sewa, Nepal\u2019s first and leading online payment gateway, is one of our popular and acclaimed products. Today, the online payment gateway is used by around 300k customers where they can conveniently pay for a host of services including airlines, movies and bus tickets and also receive and send money digitally via its web or mobile based platform. We have a set of skilled engineers and staff who have an in-depth understanding of developing and deploying software\u2019s tailored to meet the needs of our clients. We lead the market when it comes to transaction banking products with almost 90% of Nepal\u2019s financial institutions using at least one of our transaction banking products. Our clients include financial institutions, corporate and media houses, industrial firms, telecoms, travel agencies and other organizations which bear a name in their own field. Established in 2004, the company currently employs 210 people with combined expertise and competence in technology and management. F1Soft is focused on the continuous innovation and improvement of its transaction banking products.","title":"About Us"},{"location":"sms/#important-parameters","text":"PARAMETER NAME PARAMETER VALUE < algorithm> HmacSHA512 < apikey > test@test.com.np < apisecret > dhjkloipyur5fhjusdnbhadsf < delimiter > \u201c \u201d (single space/whitespace) < nonce > Random alphanumeric value (e.g. uuid)","title":"Important Parameters:"},{"location":"sms/#signature-generation-mechanism","text":"The client needs to generate HMAC hash by preparing below raw string form: Create HMAC token using <algorithm> * Prepare your signature data based on this format <delimiter><apiKey><delimiter><nonce><delimiter><requestpayload><delimiter> (Note: Please observe that delimiter(whitespace) is required in between the data. Furthermore, it is also placed at the start and end of the string form.) Here API username will be shared by F1Soft, nonce must be unique for each request (can be used as unique transaction id or timestamp), request body is payload for API invocation. The client needs to do HMAC SHA512 hashing to above raw details and perform base64 encoding to produce binary byte data. The final base64 encoded form is referred as signature hash. * Encode the signature using Base64","title":"Signature generation mechanism:"},{"location":"sms/#send-sms","text":"This API is used by the third party to send SMS to the mobile users. The API is secured with HMAC authentication. URL: [https://smsapi.f1soft.com/sms/send][1] URL: https://smsapi.f1soft.com/sms/send","title":"Send SMS"},{"location":"sms/#request-method","text":"HTTP METHOD: POST","title":"Request method:"},{"location":"sms/#headers","text":"CONTENT TYPE application/json AUTHORIZATION < algorithm > < apikey >: < nonce >: < signature > AUTHORIZATION-TYPE HMAC Authorization example: HmacSHA512 test@test.com.np:29206090-9a88-4fd7-9285-bbcb2510d204: SHAd50a54bc92ae8c657adgf272c5a7aaf41d1978e635z7e9oba64c2504baa22d1c9da4ac72b22pfc2080402b6ca5 37ad63bfe6703becac8213a59cebfd85f30f58","title":"Headers:"},{"location":"sms/#request-body-parameters","text":"PARAMETER NAME Type MANDATORY REMARKS mobileNumber String Yes Valid telco subscriber mobile no. message String No Message to send [ Unicode message also supported] Password String yes otp/alert RequestId String yes Unique id for every sms transaction","title":"Request body parameters:"},{"location":"sms/#sample-request-body","text":"{\"mobileNumber\":\"98xxxxxxxx\", \"message\":\"Message to send\", \u201ctype\":\"otp\", \"uniqueId\":\"F1-1001\"} *NOTE: REQUEST BODY SHOULD NOT HAVE ANY SPACE IN IT .","title":"Sample request body:"},{"location":"sms/#example","text":"","title":"EXAMPLE:"},{"location":"sms/#1-response-body-parameters","text":"PARAMETER NAME Type REMARKS status boolean Success/Failure flag message String Api result description code Object System success/failure code data String Response actual data httpStatus String Api status code","title":"1. Response body parameters:"},{"location":"sms/#2-data","text":"PARAMETER NAME Type REMARKS mobileNumber string SMS received mobile number msgId string SMS sent unique id","title":"2. Data"},{"location":"sms/#responses","text":"Success response: { \"status\": true, \"message\": \"SMS delivered successfully\", \"code\": \"0\", \"data\": { \"mobileNumber\": \"98xxxxxxxx\", \"msgId\": \"MN-1553144161875\" }, \"httpStatus\": 200 } Authentication failed: { \"timestamp\": 1522047604846, \"status\": 403, \"error\": \"Forbidden\", \"message\": \"Invalid authorization data\", \"path\": \"/sms/send\" } SMPP Error: { \"code\": \"-1\", \"developerMessage\": \"Failed to submit to the SMSC.\", \"link\": \"string\", \"message\": \"SMS delivery failed\", \"status\": false, \"httpStatus\": 406 } Delivery failed: { \"code\": \"-1\", \"developerMessage\": \"Failed to submit to the SMSC.\", \"link\": \"string\", \"message\": \"SMS delivery failed\", \"status\": false, \"httpStatus\": 406 }","title":"Responses:"},{"location":"sms/#receive-sms-callback","text":"SMS Aggregator system receives SMS, sent to client\u2019s short-codes. This system triggers callback notification to client\u2019s system, if this setting is configured. The client\u2019s system needs to develop callback API based on the specifications below:","title":"Receive SMS callback:"},{"location":"sms/#request-method_1","text":"HTTP METHOD: POST","title":"Request method:"},{"location":"sms/#headers_1","text":"CONTENT TYPE application/json AUTHORIZATION < algorithm > < apikey >: < nonce >: < signature > AUTHORIZATION-TYPE HMAC Authorization example: HmacSHA512 test@test.com.np:29206090-9a88-4fd7-9285-bbcb2510d204: SHAd50a54bc92ae8c657adgf272c5a7aaf41d1978e635z7e9oba64c2504baa22d1c9da4ac72b22pfc2080402b6ca5 37ad63bfe6703becac8213a59cebfd85f30f58 Note: We will send HMAC in Authorization for this API.","title":"Headers:"},{"location":"sms/#request-body-parameter","text":"Field Type Mandatory Description boid string Yes Boid Provided by Bank username String Yes Client username Password String yes Client Password RequestId String yes Unique Request Id","title":"Request body parameter:"},{"location":"sms/#response-parameter","text":"PARAMETER NAME DESCRIPTION DATA TYPE MANDATORY message SMS text received from customer as SMS message String Yes resultDescription Mobile number of SMS Sender String Yes boid SMS received date String Yes name Trace ID to uniquely identify SMS received transaction id String Yes totalAmount SMS shortcode where user sends SMS from app String Yes","title":"Response Parameter"},{"location":"sms/#sample-request-body_1","text":"{\"message\":\"BALANCE\",\"mobileNumber\":\"98xxxxxxxx\",\"receivedDate\":\"2021-04-28 16:52:20\",\"traceid\":\"CNP- 1001\",\"shortCode\":\"XXXX\"} *NOTE: REQUEST BODY SHOULD NOT HAVE ANY SPACE IN IT . Example: { \u201cmessage\u201d: \u201cBALANCE\u201d, \u201cmobileNumber\u201d: \u201c98xxxxxxxx\u201d, \u201creceivedDate\u201d: \u201c2021-04-28 16:52:20\u201d, \u201ctraceid\u201d: \u201cCNP-1001\u201d \"shortCode\": \"XXXX\" }","title":"Sample Request body:"},{"location":"sms/#response-parameter_1","text":"PARAMETER NAME Type REMARKS code string Response status of the response message string Description of the response","title":"Response Parameter:"},{"location":"sms/#response-sample","text":"{ \u201ccode\u201d: \u201c0\u201d, \u201cmessage\u201d: \u201cNotified successfully.\u201d }","title":"Response sample:"},{"location":"sms/#code-samples","text":"<?php $apiKey = '<apikey shared to client>'; $apiSecret = '<apisecret shared to client>'; $nonce = '1234567'; $requestData = ['mobileNumber'=> '98xxxxxxxx', 'message'=> 'Message to send', 'type'=>'otp', 'uniqueId'=>'F1- 1001']; $url = 'https://smsapi.f1soft.com/sms/send'; $delimiter = ' '; $digestString = $delimiter . $apiKey. $delimiter . $nonce. $delimiter . json_encode($requestData) . $delimiter; $digest = hash_hmac('SHA512', $digestString, $apiSecret, true); $headers = ['Authorization: HmacSHA512 '. $apiKey . ':' . $nonce . ':' . base64_encode($digest), 'Content-Type: application/json']; $ch = curl_init(); curl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\"); curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($requestData)); $curlOptions = [ CURLOPT_URL => $url, CURLOPT_RETURNTRANSFER => true, CURLOPT_FOLLOWLOCATION => true, CURLOPT_MAXREDIRS => 10, CURLOPT_HTTPHEADER => $headers, CURLOPT_HEADER => false, ]; curl_setopt_array($ch, $curlOptions); $res = curl_exec($ch); echo $res; Java public class Main { public static void main(String[] args) throws NoSuchAlgorithmException, InvalidKeyException { String apiKey = \"<apikey shared to client>\u201d; String apiSecret = \"<apiSecret shared to client>\"; String delimiter = \" \"; String nonce = \"29206090-9a88-4fd7-9285-bbcb2510d204\"; String requestPayload = \"{\"mobileNumber\\\":\\\"98xxxxxxxx\\\",\\\"message\\\":\\\"Message to send\\\",\\\"type\\\":\\\"otp\\\",\\\"uniqueId\\\":\\\"F1-1001\\\"}\"; String signatureBase = delimiter + apiKey + delimiter + nonce + requestPayload + delimiter; Mac hasher = Mac.getInstance(\"HmacSHA512\"); hasher.init(new SecretKeySpec(apiSecret.getBytes(), \"HmacSHA512\")); byte[] hash = hasher.doFinal(signatureBase.getBytes()); String signature = DatatypeConverter.printBase64Binary(hash); String header = \"HmacSHA512\" + \" \" + apiKey + \":\" + nonce + \":\" + signature; System.out.println(header); } } .NET using System; using System.Security.Cryptography; using System.Text; public class Program{ public static void Main(){ String apiKey = \"<apikey shared to client>\u201d;\"; String apiSecret = \"<apiSecret shared to client>\"; String delimiter = \" \"; String nonce = \"29206090-9a88-4fd7-9285-bbcb2510d204\"; String requestPayload = \"{\"mobileNumber\\\":\\\"98xxxxxxxx\\\",\\\"message\\\":\\\"Message to send\\\",\\\"type\\\":\\\"otp\\\",\\\"uniqueId\\\":\\\"F1-1001\\\"}\"; String signatureBase = delimiter+apiKey+delimiter+nonce+requestPayload+delimiter; String signature = HMAC_SHA512(apiSecret, signatureBase); String header = \"HmacSHA512\"+ \" \"+ apiKey+\":\"+nonce+\":\"+signature; Console.WriteLine(header); } public static string HMAC_SHA512(string keyString, string message){ byte[] key = Encoding.ASCII.GetBytes(keyString); HMACSHA512 sha = new HMACSHA512(key); byte[] input = Encoding.ASCII.GetBytes(message); return BitConverter.ToString(sha.ComputeHash(input)).Replace(\"-\", \"\").ToLower(); } }","title":"**Code Samples:"}]}